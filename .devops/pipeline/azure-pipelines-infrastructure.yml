trigger:
  branches:
    include:
      - master
  paths:
    include:
      - .devops/pipeline/azure-pipelines-infrastructure.yml
      - .devops/adm-rg.bicep
      - .devops/app-rg.bicep
      - .devops/site-build.bicep
      - .devops/role-assign.bicep

resources:
  - repo: self

pool:
  vmImage: 'ubuntu-22.04'

name: $(Build.BuildId)

parameters:
  - name: sites
    type: object
    default:
      - orange|3|300

variables:
  imageRepository: 'build/trialcourt/$(Build.SourceBranchName)'
  dockerfilePath: '$(Build.SourcesDirectory)/.devops/drupal-nginx-fpm/0.6-devops/Dockerfile'
  tag: 'build_$(Build.BuildId)-$(Build.SourceVersion)'
  location: 'West US 3'
  site: ''
  siteId: ''
  siteName: ''
  siteFarmId: ''
  siteEnvPrefix: ''
  ResourceGroupName: ''
  uniqueMod: '01'

  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    containerRegistry: 'uatctcmscr.azurecr.io'
    azureServiceConnection: 'POC Manual connection'
  ${{ elseif eq(variables['Build.SourceBranchName'], 'stage') }}:
    containerRegistry: 'uatctcmscr.azurecr.io'
    azureServiceConnection: 'POC Manual connection'
  ${{ else }}:
    containerRegistry: 'uatctcmscr.azurecr.io'
    azureServiceConnection: 'TODO'

stages:

  - stage: Manifest
    displayName: Manifest
    jobs:
      - job: ReadManifest
        displayName: Read manifest file
        steps:
          - script: |
              case $(Build.SourceBranchName) in
                master)
                  echo "##vso[task.setvariable variable=siteEnvPrefix;isOutput=true;]uat"
                  ;;
                stage)
                  echo "##vso[task.setvariable variable=siteEnvPrefix;isOutput=true;]uat"
                  ;;
                *)
                  echo "##vso[task.setvariable variable=siteEnvPrefix;isOutput=true;]int"
                  ;;
              esac
            displayName: 'Set Environment Prefix'
            name: EnvironmentPrefix
          - script: echo "$(EnvironmentPrefix.siteEnvPrefix)"
            displayName: 'Display Prefix'

      - job: ProcessSites
        displayName: Process sites
        dependsOn: ['ReadManifest']
        variables:
          siteEnvPrefixLocal: $[ dependencies.ReadManifest.outputs['EnvironmentPrefix.siteEnvPrefix'] ]
        steps:
          - ${{ each site in parameters.sites }}:
            - script: |
                IFS='|'
                read -a siteInfo <<< "${{site}}"

                echo "CountyId: ${siteInfo[0]}"
                echo "CountyName : ${siteInfo[2]}"
                echo "FarmId : ${siteInfo[1]}"
                echo "##vso[task.setvariable variable=site;]${{site}}"
                echo "##vso[task.setvariable variable=siteId;]${siteInfo[2]}"
                echo "##vso[task.setvariable variable=siteFarmId;]${siteInfo[1]}"
                echo "##vso[task.setvariable variable=siteName;]${siteInfo[0]}"
                echo "##vso[task.setvariable variable=ResourceGroupName;]-ctcms-df${siteInfo[1]}-app-rg"
              displayName: 'SITE: ${{ site }}'

            - template: /.devops/pipeline/_provision-app-service.yml
              parameters:
                azureServiceConnection: $(azureServiceConnection)
                siteEnvPrefixLocal: $(siteEnvPrefixLocal)
                ResourceGroupName: $(ResourceGroupName)
                location: $(location)
                siteFarmId: $(siteFarmId)
                siteId: $(siteId)
                siteName: $(siteName)
                uniqueMod: $(uniqueMod)
                BuildId: $(Build.BuildId)

            - template: /.devops/pipeline/_deploy-container.yml
              parameters:
                azureServiceConnection: $(azureServiceConnection)
                siteEnvPrefixLocal: $(siteEnvPrefixLocal)
                siteId: $(siteId)
                uniqueMod: $(uniqueMod)
                siteFarmId: $(siteFarmId)
                containerRegistry: $(containerRegistry)
                sourceBranchName: $(Build.SourceBranchName)
                tag: 'latest'
